$ErrorActionPreference   =  'Stop'
$ProgressPreference      =  'SilentlyContinue'

$TimeZone    =  "Eastern Standard Time"
$TimeServer  =  "time.cloudflare.com"

Try {
  if ((Get-ComputerInfo).CsPartOfDomain) {
    Throw "$($ENV:Computername) is part of domain $((Get-ComputerInfo).CsPartOfDomain). Time is set by domain controller."
  }

  # Check Timeserver and set if needed
    Get-Service "Windows Time" | Stop-Service
    Start-Process w32tm -ArgumentList "/unregister" -Wait -NoNewWindow
    Start-Process w32tm -ArgumentList "/register" -Wait -NoNewWindow
    Get-Service "Windows Time" | Start-Service

      if ((Get-Service "Windows Time" -ea silentlycontinue).Status -eq "Running") {
        $CurrentTimeServer = (w32tm /query /status | where {$_ -match "Source:"}).split(" ")[1]
      } else {
        Write-Host "Windows Time Service is not running"
      }

    if ($CurrentTimeZone -eq $TimeZone) {
      Write-Host "Time Server already set to $($TimeServer)"
    } else {
      $Test = Test-NetConnection -ComputerName $TimeServer -InformationLevel "Detailed"
        Write-Host "Timeserver is active"
        Start-Process w32tm -ArgumentList "/config /manualpeerlist:$TimeServer /syncfromflags:manual /update" -Wait -NoNewWindow
        Start-Process w32tm -ArgumentList "/config /update" -Wait -NoNewWindow
        Start-Process w32tm -ArgumentList "/resync /rediscover" -Wait -NoNewWindow
        Start-Process w32tm -ArgumentList "/query /status" -Wait -NoNewWindow
        Write-Host "Successfully set windows time server to $($TimeServer)" -ForegroundColor Green
    }   

  # Check Timezone and set if needed
  $CurrentTimeZone = Get-TimeZone | select -ExpandProperty StandardName
    if ($CurrentTimeZone -eq $TimeZone) {
      Write-Host "Time zone already set to $($TimeZone)"
    } else {
      Set-TimeZone $TimeZone
      Write-Host "Timezone set to $($TimeZone) successfully" -ForegroundColor Green
    }

}
catch {
  Write-Host "An error occurred: $($_)"
}
